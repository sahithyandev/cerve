name: Release

on:
  push:
    tags:
      - 'v*' # Triggers on tags like v1.0.0, v2.1.0, etc.

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: cerve-linux
          - os: windows-latest
            artifact_name: cerve-windows
          - os: macos-latest
            artifact_name: cerve-macos

    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.31.6'

      # Create a build directory
      - name: Create build directory
        run: mkdir build

      # Configure the project in release mode
      - name: Configure CMake
        working-directory: ./build
        run: cmake -DCMAKE_BUILD_TYPE=Release ..

      # Build the project
      - name: Build project
        working-directory: ./build
        run: cmake --build . --config Release

      # Package the executable
      - name: Package executable
        working-directory: ./build
        run: |
          mkdir -p release
          cp cerve release/ # Replace 'cerve' with your executable name
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            7z a release.zip release/*
          else
            tar -czvf release.tar.gz release/
          fi

      # Upload artifacts for this OS
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: build/release.${{ runner.os == 'Windows' && 'zip' || 'tar.gz' }}

  create-release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Download all artifacts from the build jobs
      - name: Download artifacts
        run: |
          mkdir -p artifacts
          gh run download ${{ github.run_id }} -D artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create a GitHub release
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload all release assets
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/${{ matrix.artifact_name }}/release.${{ runner.os == 'Windows' && 'zip' || 'tar.gz' }}
          asset_name: ${{ matrix.artifact_name }}.${{ runner.os == 'Windows' && 'zip' || 'tar.gz' }}
          asset_content_type: ${{ runner.os == 'Windows' && 'application/zip' || 'application/gzip' }}



